services:
    # Nginx Reverse Proxy
    nginx:
        build:
            context: ../nginx
            dockerfile: Dockerfile
        ports:
            - "80:80"
            - "443:443" # For future SSL
        volumes:
            - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ../nginx/conf.d:/etc/nginx/conf.d:ro
        depends_on:
            - laravel.test
            - frontend
        networks:
            - sail

    # Vue Frontend Service
    frontend:
        build:
            context: ../frontend
            dockerfile: Dockerfile
            target: development # Multi-stage build
        volumes:
            - ../frontend:/app
            - /app/node_modules # Anonymous volume for node_modules
        environment:
            - NODE_ENV=development
            - VITE_API_URL=http://localhost/api
        networks:
            - sail
        command: npm run dev -- --host 0.0.0.0 --port 5173

    # Laravel Backend (Updated)
    laravel.test:
        build:
            context: "./vendor/laravel/sail/runtimes/8.4"
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: "sail-8.4/app"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports: [] # Remove external port exposure - nginx handles this
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail
        depends_on:
            - mysql
    mysql:
        image: "mysql:8.0"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "laravel"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - "sail-mysql:/var/lib/mysql"
            - "./vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            timeout: 20s
            retries: 10
        restart: unless-stopped
        command: >
            --default-authentication-plugin=mysql_native_password
            --bind-address=0.0.0.0
            --skip-host-cache
            --skip-name-resolve
            --innodb-use-native-aio=0
            --character-set-server=utf8mb4
            --collation-server=utf8mb4_unicode_ci
    qdrant:
        image: qdrant/qdrant
        ports:
            - "6333:6333"
        volumes:
            - qdrant_storage:/qdrant/storage
        networks:
            - sail

networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    qdrant_storage: {}
